{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/enums/Genres.ts","./src/app/game-statistics/game-statistics.component.ts","./src/app/game-statistics/game-statistics.component.html","./src/app/services/scores.service.ts","./src/app/services/algorithms.service.ts","./src/environments/environment.ts","./src/app/posts/createPost.component.ts","./src/app/posts/createPost.component.html","./src/app/services/login.service.ts","./src/app/services/post.service.ts","./src/app/posts/listPosts.component.html","./src/app/posts/listPosts.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/adminUpdates/editGame/editGame.component.ts","./src/app/adminUpdates/editGame/editGame.component.html","./src/app/subscriptions/subscriptions.component.html","./src/app/subscriptions/subscriptions.component.ts","./src/app/services/game.service.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/subscriptions/subs-button/subs-button.component.ts","./src/app/subscriptions/subs-button/subs-button.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/adminUpdates/gameList.component.html","./src/app/adminUpdates/gameList.component.ts","./src/app/game-page/game-page.component.html","./src/app/game-page/game-page.component.ts","./src/app/posts/editPost.component.ts","./src/app/posts/editPost.component.html","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/adminUpdates/newGame/newGame.component.ts","./src/app/adminUpdates/newGame/newGame.component.html","./src/app/posts/postButton.component.ts","./src/app/posts/postButton.component.html","./src/app/success-page/success-page.component.ts","./src/app/success-page/success-page.component.html","./src/app/adminUpdates/adminUpdates.component.html","./src/app/adminUpdates/adminUpdates.component.ts","./src/app/services/user.service.ts","./src/app/services/chat.service.ts","./src/app/index-page/index-page.component.html","./src/app/index-page/index-page.component.ts","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/posts/expandedPost.component.html","./src/app/posts/expandedPost.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from '../models/user.model';\nimport { LoginService } from '../services/login.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent {\n  user:User;\n  \n  constructor(private router: Router,public loginService: LoginService, activatedRoute:ActivatedRoute,public userService: UserService){ \n    let id=activatedRoute.snapshot.params['id'];\n    this.user={info:'',password:'',roles:['User'],myGames:[],imagePath:null};\n  }\n\n  createUser(){\n    this.userService.createNewUser(this.user).subscribe(data => {\n      this.router.navigate(['successPage']);\n    },\n    error => console.error('Error al crear el post '+error)\n    );\n  }\n\n}\n","<div class=\"container\" style=\"padding-bottom: 150px\">\n    <div class=\"row\">\n      <div class=\"col-lg-3\">\n  \n      </div>\n      <div class=\"col-lg-6\">\n        <div class=\"main-section\">\n          <div class=\"content-section\">\n            <div class=\"head-section\">\n              <h3>Registrarse</h3>\n            </div>\n            <div class=\"body-section\">\n              <form action=\"\" method=\"post\">\n                <div class=\"form-input\">\n                  <p style=\"color: rgb(255, 0, 0);text-align: center;\"></p>\n                  <input type=\"text\" name=\"name\" [(ngModel)]=\"user.info\" placeholder=\"Nombre de usuario\">\n                </div>\n                <div class=\"form-input\">\n                  <p></p>\n                  <input type=\"text\" name=\"Email\" placeholder=\"Email\">\n                </div>\n                <div class=\"form-input\">\n                  <p style=\"color: rgb(255, 0, 0);text-align: center;\"></p>\n                  <input type=\"password\" name=\"password\" [(ngModel)]=\"user.password\" placeholder=\"Contraseña\">\n                </div>\n                <div class=\"form-input\">\n                  <p></p>\n                  <input type=\"password\" name=\"password1\" placeholder=\"Confirmar contraseña\">\n                </div>\n                <div class=\"form-input\">\n                  <input type=\"submit\" value=\"Registrarse\" (click)=\"createUser()\">\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-3\">\n      </div>\n    </div>\n  </div>\n","export enum Genres{\n    Horror,\n    Shooter,\n    Action,\n    Platformer,\n    Sports,\n    Puzzles,\n    Narrative,\n    RPG\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Game } from '../models/game.model';\nimport { GameService } from '../services/game.service';\nimport { ScoresService } from '../services/scores.service';\n@Component({\n  selector: 'app-game-statistics',\n  templateUrl: './game-statistics.component.html',\n  \n})\nexport class GameStatisticsComponent  {\n  game:Game;\n  id:number;\n  myScores = new Map();\n  myScoresObj = new Object();\n  stars1:number;\n  stars2:number;\n  stars3:number;\n  stars4:number;\n  stars5:number;\n\n  constructor(private router: Router, activatedRoute:ActivatedRoute, private gameService: GameService,private scoresService:ScoresService) { \n    \n    let id = activatedRoute.snapshot.params['id'];\n    this.id = id;\n\n  }\n  ngOnInit(): void {\n    this.getGame();\n    this.getMap();\n  }\n  flushMap(myScoresObj: Object) {\n    for (var [key, value] of Object.entries(myScoresObj)) {\n      this.myScores.set(key,value); \n    }\n  }\n  \n  \n  getMap(){\n    this.scoresService.getScoresById(this.id).subscribe(\n      myScoresObj => {\n        this.myScoresObj = myScoresObj as Object;\n        this.showStars();\n      }\n    );\n  }\n  showStars():void{\n    this.flushMap(this.myScoresObj);\n    this.stars1=this.scoresService.doAverageRatio(this.myScores,1);\n    this.stars2=this.scoresService.doAverageRatio(this.myScores,2);\n    this.stars3=this.scoresService.doAverageRatio(this.myScores,3);\n    this.stars4=this.scoresService.doAverageRatio(this.myScores,4);\n    this.stars5=this.scoresService.doAverageRatio(this.myScores,5);\n  }\n\n  getGame(){\n    this.gameService.getGameById(this.id).subscribe(\n      game => {\n        this.game = game as Game;\n      }\n    );\n  }\n  \n  returnIndex() {this.router.navigate(['index']);}\n}\n","<div class=\"container container-white\">\n    <h1>Estadísticas de {{game.gameTitle}}</h1>\n    <div class=\"row\">\n        <div class=\"col-lg-4\">\n            <img src=\"{{game.imagePath}}\" width=\"375\" height=\"525\"> \n            <h4 style=\"text-align: center;\">Valoracion media de {{game.gameTitle}} es {{game.averageScore}}</h4>  \n        </div>\n        \n        <div class=\"col-lg-8\">\n            <h4 style=\"text-align: center;\">Valoraciones</h4>  \n            <div class=\"chart-wrap vertical\"style=\"padding-top: 150px;\">\n                \n                <div class=\"grid\">\n                   \n                    <div class=\"bar\" style=\"--bar-value:{{stars1}}%; background-color: #d60f0f;\" data-name=\"★\" ></div>\n                    <div class=\"bar\" style=\"--bar-value:{{stars2}}%; background-color: #fca504;\" data-name=\"★★\" ></div>\n                    <div class=\"bar\" style=\"--bar-value:{{stars3}}%; background-color: #eeff00;\" data-name=\"★★★\" ></div>\n                    <div class=\"bar\" style=\"--bar-value:{{stars4}}%; background-color: #3bec18;\" data-name=\"★★★★\" ></div>\n                    <div class=\"bar\" style=\"--bar-value:{{stars5}}%; background-color: #18af3b;\" data-name=\"★★★★★\" ></div>  \n                    \n                </div>\n              \n            </div>\n          \n        </div>\n        \n    </div>\n    \n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nconst BASE_URL: string = 'api/games/';\n@Injectable({providedIn:'root'})\nexport class ScoresService{\n\n  constructor(private httpClient: HttpClient) { }\n\ngetScoresById(id: number): Observable<Map<number,number>>{\n    return this.httpClient.get(BASE_URL + id + '/scores').pipe(\n      catchError(error => this.handleError(error))\n    ) as Observable<Map<number,number>>;\n}   \n\n  doAverageRatio( myScores:Map<number,number>, index: Number ){\n    let aux = 0;\n    let numberofindexinthearray= 0;\n    for (let value of myScores.values()) {\n        if (value.valueOf()==index){\n            numberofindexinthearray++;\n            }\n      }\n    aux = (numberofindexinthearray*100)/(myScores.size);\n    return aux;\n    }\n\n    private handleError(error: any) {\n\t\tconsole.error(error);\n\t\treturn Observable.throw('Server error (' + error.status + '): ' + error.text())\n    }\n}\n","import { GameService } from 'src/app/services/game.service';\nimport { UserService } from './user.service';\nimport { LoginService } from 'src/app/services/login.service';\nimport { Game } from './../models/game.model';\nimport { Genres } from './../enums/Genres';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { LiteralMapEntry } from '@angular/compiler/src/output/output_ast';\nimport { User } from '../models/user.model';\n\n@Injectable({providedIn:'root'})\nexport class AlgorithmsService{\n  constructor(private httpClient: HttpClient,private loginService:LoginService,private userService:UserService,private gameService: GameService) { }\n\n  recommendedAlgorithm(user:User){\n    let amountOfGamesWithGenre= new Map();\n    Object.values(Genres).forEach(genre =>\n        amountOfGamesWithGenre.set(genre,0)\n    );\n    let myGames;\n    this.userService.getSubscriptions(this.loginService.user.id).subscribe(\n      games=>{\n        myGames = games as number[];\n      }\n    )\n    console.log(myGames)\n    myGames.forEach(game =>{\n      //getgamebyid por parametro game y get genre,get entrada en el mapa del genre y sumarle 1\n      this.gameService.getGameById(game).subscribe(\n        data =>{\n          let game=data as Game;\n          amountOfGamesWithGenre.set(game.genre,amountOfGamesWithGenre.get(game.genre)+1);\n          console.log(amountOfGamesWithGenre.get(game.genre))\n        }\n      )\n    })\n    //encontrar entrada mayor y devolver el genre.\n  }\n  doAverageScore(scores:Map<number,number>){\n    let aux=0.0;\n    scores.forEach(score =>\n      aux+=score\n      );\n      aux = aux/(scores.size);\n      aux = aux*10;\n      aux = Math.round(aux);\n      aux = aux/10;\n      return aux;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { LoginService } from './../services/login.service';\nimport { Post } from './../models/post.model';\nimport { PostService } from './../services/post.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PostType } from '../enums/PostType';\n\n@Component({\n  selector: 'newPost',\n  templateUrl: './createPost.component.html',\n})\n\nexport class CreatePostComponent{\n  post:Post;\n  @ViewChild(\"file\")\n  file:any;\n  constructor(private router: Router, activatedRoute:ActivatedRoute,private pService:PostService,private loginService:LoginService){\n    let id=activatedRoute.snapshot.params['id'];\n    this.post={title:'',author:this.loginService.user.info,creationDate:'',updateDate:'',fromGameID:id,imagePath:'',postText:'',theType:''};\n  }\n  createPost(){\n    this.pService.createNewPost(this.post).subscribe((post:Post) => {\n      this.uploadPostImage(post);\n\n    },\n    error => console.error('Error al crear el post '+error)\n    );\n  }\n  uploadPostImage(post:Post){\n    const image=this.file.nativeElement.files[0];\n    if(image){\n      let formData=new FormData();\n      formData.append(\"imageFile\",image);\n      this.pService.setPostImage(post,formData).subscribe(\n        _ => this.router.navigate(['successPage'])\n      )\n    }\n  }\n}\n","<div class=\"container container-white\" style=\"padding-bottom: 150px\">\n  <div class=\"row\">\n    <div class=\"col-lg-3\">\n\n    </div>\n    <div class=\"col-lg-6\">\n      <div class=\"main-section\">\n        <div class=\"content-section\">\n          <div class=\"head-section\">\n            <h3>Nuevo post</h3>\n          </div>\n          <div class=\"body-section\">\n            <form action=\"\" method=\"POST\" enctype=\"multipart/form-data\">\n              <p>Portada:</p>\n                  <input #file type='file' name='imageFile' accept=\".jpg, .jpeg\"/>\n              <div class=\"form-input\">\n                <input type=\"text\" [(ngModel)]=\"post.title\" name=\"title\" placeholder=\"Titulo Post\">\n              </div>\n              <div class=\"form-input\">\n                <textarea name='postText' [(ngModel)]=\"post.postText\" rows=20 cols=40></textarea>\n              </div>\n              <div class=\"form-input\">\n                <div class=\"wrap\">\n                  <input list=\"postTypes\" [(ngModel)]=\"post.theType\" name=\"postType\" type=\"text\"\n                      placeholder=\"Escoge la categoría\">\n                  <datalist id=\"postTypes\">\n                      <option value=\"Guides\"></option>\n                      <option value=\"News\"></option>\n                      <option value=\"Updates\"></option>\n                  </datalist>\n              </div>\n                </div>\n              <div class=\"form-input\">\n                <input type=\"hidden\" name=\"_csrf\"/>\n                <!--<input type=\"submit\" value=\"Create Post\">-->\n                <button (click)=\"createPost()\">Crea el post!</button>\n\n\n              </div>\n              <input type=\"hidden\" name=\"_csrf\"/>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-3\">\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user.model';\n\nconst BASE_URL = '/api/auth';\n\n@Injectable({ providedIn: 'root' })\nexport class LoginService {\n\n    logged: boolean;\n    user: User;\n\n    constructor(private http: HttpClient) {\n        this.reqIsLogged();\n    }\n\n    reqIsLogged() {\n\n        this.http.get('/api/profiles/me', { withCredentials: true }).subscribe(\n            response => {\n                this.user = response as User;\n                this.logged = true;\n            },\n            error => {\n                if (error.status != 404) {\n                    console.error('Error when asking if logged: ' + JSON.stringify(error));\n                }\n            }\n        );\n\n    }\n\n    logIn(user: string, pass: string) {\n\n        this.http.post(BASE_URL + \"/login\", { username: user, password: pass }, { withCredentials: true })\n            .subscribe(\n                (response) => this.reqIsLogged(),\n                (error) => alert(\"Wrong credentials\")\n            );\n\n    }\n\n    logOut() {\n\n        return this.http.post(BASE_URL + '/logout', { withCredentials: true })\n            .subscribe((resp: any) => {\n                console.log(\"LOGOUT: Successfully\");\n                this.logged = false;\n                this.user = undefined;\n            });\n\n    }\n\n    isLogged() {\n        return this.logged;\n    }\n\n    isAdmin() {\n        return this.user && this.user.roles.indexOf('ADMIN') !== -1;\n    }\n\n    currentUser() {\n        return this.user;\n    }\n}","import { Post } from './../models/post.model';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { DatePipe } from '@angular/common';\n\nconst BASE_URL_POSTS: string = 'api/posts/';\n@Injectable({providedIn:'root'})\nexport class PostService{\n  constructor(private httpClient: HttpClient,private datePipe:DatePipe) { }\n    getAllPosts():Observable<Post[]>{\n        return this.httpClient.get(BASE_URL_POSTS).pipe(\n          catchError(error=> this.handleError(error))\n        ) as Observable<Post[]>;\n    }\n    getPostsFromGame(id:string,theType:string,numPage:string):Observable<Post[]>{\n        const params=new HttpParams().set('theType',theType)\n        .set('gameID',id)\n        .set('numPage',numPage);\n        return this.httpClient.get(BASE_URL_POSTS+'types',{params}).pipe(\n          catchError(error=> this.handleError(error))\n        ) as Observable<Post[]>;\n    }\n    getPostByID(id: number): Observable<Post>{\n        return this.httpClient.get(BASE_URL_POSTS + id).pipe(\n          catchError(error => this.handleError(error))\n        ) as Observable<Post>;\n    }\n    deletePostbyID(id:number){\n        return this.httpClient.delete(BASE_URL_POSTS+id).pipe(\n          catchError(error => this.handleError(error))\n        );\n    }\n    setPostImage(post:Post, formData:FormData){\n      return this.httpClient.post(BASE_URL_POSTS+post.id+\"/images\",formData).pipe(\n        catchError(error => this.handleError(error))\n      );\n    }\n    createNewPost(post:Post){\n\n        if(!post.id){\n          post.creationDate=this.getCurrentDate();\n          post.updateDate=this.getCurrentDate();\n          return this.httpClient.post(BASE_URL_POSTS,post).pipe(\n            catchError(error => this.handleError(error))\n          );\n        }\n        else{\n          post.updateDate=this.getCurrentDate();\n          return this.httpClient.put(BASE_URL_POSTS+post.id,post).pipe(\n            catchError(error => this.handleError(error))\n          );\n        }\n    }\n\n    private handleError(error: any) {\n\t\tconsole.error(error);\n\t\treturn Observable.throw('Server error (' + error.status + '): ' + error.text())\n\t}\n  getCurrentDate(){\n    let date=new Date();\n    let latest_date=this.datePipe.transform(date,'dd/MM/yy');\n    return latest_date;\n  }\n}\n","<div style=\"background-color: aliceblue;\">\n  <h1>{{fromGameTitle}}: lista {{typeString}}</h1>\n  <postButton *ngFor=\"let post of posts\" [post]=\"post\" (clicked)=\"gotoExpandedPost(post.id)\"></postButton>\n</div>\n\n<p><button (click)=\"gotoIndex()\">ir a Index</button></p>\n","import { PostService } from './../services/post.service';\nimport { PostButtonComponent } from './postButton.component';\nimport { Post } from '../models/post.model';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GameService } from '../services/game.service';\nimport { Game } from '../models/game.model';\n\n@Component({\n  selector: 'listPosts',\n  templateUrl: './listPosts.component.html'\n})\n\nexport class ListPostsComponent{\n  posts: Post[]=[];\n  typeString=\"\";\n  fromGameTitle=\"\";\n  constructor(private router: Router, activatedRoute:ActivatedRoute,private pService:PostService,private gameService: GameService) {\n    let id = activatedRoute.snapshot.queryParams['gameID']\n    let theType=activatedRoute.snapshot.queryParams['theType'];\n    let numPage=activatedRoute.snapshot.queryParams['numPage'];\n    this.pService.getPostsFromGame(id,theType,numPage).subscribe(\n      posts=>{\n        this.posts=posts as Post[];\n\n      },\n    )\n    this.gameService.getGameById(id).subscribe(\n      data =>{\n        let game=data as Game;\n        this.fromGameTitle=game.gameTitle.toString();\n      }\n    )\n    this.typeString=theType;\n   }\n  gotoExpandedPost(theID:number){\n    this.router.navigate(['listPosts/'+theID])\n  }\n  gotoIndex() {this.router.navigate(['index'])}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GameService } from 'src/app/services/game.service';\nimport { Game } from './models/game.model';\n\n\n@Component({\n  selector: 'app-root',\n  \n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  imgUrl = \"assets/logo.png\"  \n  game: Game;\n  //router: Router;\n  constructor(private gameService: GameService ,private router: Router){ }\n\n  ngOnInit() {\n    this.getGame();\n  }\n\n  getGame(){\n    this.gameService.getGameById(1).subscribe(\n      game => {\n        this.game = game as Game;\n      }\n    );\n  }\n  gotoGamePage() {this.router.navigate(['games/:id']);}\n  gotoIndex() {this.router.navigate(['index']);}\n  gotoAdminUpdates() {this.router.navigate(['adminUpdates']);}\n}\n","\n  <!-- Navigation -->\n  <header></header>\n  <p></p>\n  <router-outlet></router-outlet>\n  <footerc></footerc>","import { Component,OnInit  } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Game } from '../../models/game.model';\nimport { GameService } from '../../services/game.service';\n\n\n@Component({\n  selector: 'editGame',\n  templateUrl: './editGame.component.html'\n})\nexport class EditGameComponent {\n    game:Game;\n    id:number;\n      constructor(private router: Router, activatedRoute:ActivatedRoute, private gameService: GameService) {\n        let id = activatedRoute.snapshot.params['id'];\n        this.id = id;\n      }\n      ngOnInit(): void {\n        this.getGame();\n      }\n        getGame(){\n          this.gameService.getGameById(this.id).subscribe(\n            game => {\n              this.game = game as Game;\n            }\n          );\n        }\n}","<!-- Page Content -->\n<div class=\"container container-white\" style=\"padding-bottom: 420px;\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <p></p>\n            <h2>Editar {{game.gameTitle}}</h2>\n            <p></p>\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th class=\"responsiveC\">Portada</th>\n                        <th>Nombre</th>\n                        <th>Descripción</th>\n                        <th>Categoria</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>\n                            <img src=\"{{game.imagePath}}\" class=\"responsive2\" width=\"170\" height=\"230\">\n                            <input type='file' name='imageField' accept=\".jpg, .jpeg\"/>\t\n                            <input type='checkbox' name='removeImage'> <label>Eliminar portada</label><br>\n                        </td>\n                        <td>\n                            <input type='text' value='{{game.gameTitle}}' name='gameTitle' />\n                            <input type=\"hidden\" name=\"id\" value=\"{{game.id}}\" />\n                        </td>\n                        <td>\n                            <textarea name='description' rows=20 cols=40>{{game.description}}</textarea>\n                        </td>\n                        <td>\n                            <div class=\"wrap\">\n                                <input list=\"categories\" name=\"genre\" value='{{game.genre}}' type=\"text\"\n                                    placeholder=\"Categoría\">\n                                <datalist id=\"categories\">\n                                    <option value=\"Horror\"></option>\n                                    <option value=\"Shooter\"></option>\n                                    <option value=\"Action\"></option>\n                                    <option value=\"Platformer\"></option>\n                                    <option value=\"Sports\"></option>\n                                    <option value=\"Puzzles\"></option>\n                                    <option value=\"Narrative\"></option>\n                                    <option value=\"RPG\"></option>\n                                </datalist>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            \n            \n        </div>\n        <!-- /.col-lg-12 -->\n        <!-- /.row -->\n    </div>\n    <!-- /.container -->\n</div>","<div class=\"container container-white\" style=\"padding-bottom: 400px\">\n  <div class=\"row\">\n    <div class=\"col-lg-12\">\n      <p></p>\n      <h2>Suscripciones</h2>\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Portada</th>\n            <th>Nombre</th>\n            <th>Descripción</th>\n            <th>Categoria</th>\n            <th></th>\n          </tr>\n        </thead>\n        <p>{{games[0]}}</p>\n        <tbody>\n          <app-subs-button *ngFor=\"let game of games\" [game]=\"gameId\"></app-subs-button>\n        </tbody>\n      </table>\n      <h1 *ngIf=\"isEmpty()\" style=\"color: black;text-align: center;text-size-adjust: 20px; padding-top: 20px;\">No hay\n        subscripciones</h1>\n    </div>\n    <!-- /.col-lg-12 -->\n    <!-- /.row -->\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Game } from '../models/game.model';\nimport { GameService } from '../services/game.service';\nimport { LoginService } from '../services/login.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-subscriptions',\n  templateUrl: './subscriptions.component.html'\n})\nexport class SubscriptionsComponent implements\tOnInit{\n  games: number[]=[];\n\n  constructor(private router: Router,public loginService: LoginService,public userService: UserService, private gameService: GameService){}\n\n  ngOnInit() {\n    this.getGames();\n  }\n  \n  getGames(){\n    this.userService.getSubscriptions(this.loginService.user.id).subscribe(\n      gameIds=>{\n        this.games = gameIds as number[];\n      },\n    )\n  }\n\n  isEmpty(){\n      return this.games.length == 0;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders,HttpParams  } from '@angular/common/http';\nimport { Game } from '../models/game.model';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nconst BASE_URL: string = 'api/games/';\n@Injectable({providedIn: 'root' })\n  export class GameService {\n    constructor(private httpClient: HttpClient) { }\n\n    getGameById(id: number): Observable<Game>{\n        return this.httpClient.get(BASE_URL + id).pipe(\n          catchError(error => this.handleError(error))\n        ) as Observable<Game>;\n    }\n    getGamesByGenre(genre:string): Observable<Game[]>{\n      return this.httpClient.get(BASE_URL+'genres?genre='+genre).pipe(\n          catchError(error => this.handleError(error))\n      ) as Observable<Game[]>\n    }\n    getGamesPage(numPage:number): Observable<Game[]>{\n      return this.httpClient.get(BASE_URL+'pages?numPage='+numPage.toString()).pipe(\n          catchError(error => this.handleError(error))\n      ) as Observable<Game[]>;\n    }\n    getGames(): Observable<Game[]> {\n      return this.httpClient.get(BASE_URL).pipe(\n        catchError(error => this.handleError(error))\n      ) as Observable<Game[]>;\n    }\n\n    setScoreById(id: number,stars:number) {\n      const params=new HttpParams().set('stars',stars.toString())\n      return this.httpClient.post(BASE_URL + id + '/scores', params).pipe(\n        catchError(error => this.handleError(error))\n      ) as Observable<Game>;\n    }\n\n    subscribeToGame(id: number){\n      return this.httpClient.post(BASE_URL + id +'/subscriptors',null).pipe(\n        catchError(error => this.handleError(error))\n      ) as Observable<number[]>\n\n    }\n\n    unSubscribeToGame(id: number){\n      return this.httpClient.put(BASE_URL + id +'/subscriptors',null).pipe(\n        catchError(error => this.handleError(error))\n      ) as Observable <number[]>\n\n    }\n\n    private handleError(error: any) {\n\t\tconsole.error(error);\n\t\treturn Observable.throw('Server error (' + error.status + '): ' + error.text())\n\t}\n  }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from '../models/user.model';\nimport { LoginService } from '../services/login.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'profile',\n  templateUrl: './profile.component.html'\n})\nexport class ProfileComponent {\n  user:User;\n  id:number;\n\n    constructor(private router: Router, activatedRoute:ActivatedRoute, private userService: UserService,public loginService: LoginService) {\n      let id = activatedRoute.snapshot.params['id'];\n      this.id = id;\n    }\n    ngOnInit(): void {\n      this.getUser();\n    }\n      getUser(){\n        this.userService.getUserById(this.id).subscribe(\n          user => {\n            this.user = user as User;\n          }\n        );\n      }\n\n      gotoSubscriptions(){\n        {this.router.navigate(['subscriptions']);}\n      }\n      gotoIndex(){\n        {this.router.navigate(['index']);}\n      }\n      logOut() {\n        this.loginService.logOut();\n        this.gotoIndex();\n      }\n      editUser(){\n        this.userService.createNewUser(this.user).subscribe(data => {\n          this.router.navigate(['successPage']);\n        },\n        error => console.error('Error al crear el post '+error)\n        );\n      }\n\n}\n","<div class=\"container container-white\" style=\"padding-bottom: 20px;\">\n      <div class=\"row\">\n          <div class=\"col-lg-4\" style=\"text-align: center;\">\n            <form action=\"\" method=\"post\" enctype=\"multipart/form-data\">\n              <img src=\"{{user.imagePath}}\" width=\"350\" height=\"350\" style=\"padding-top: 20px; margin-top: 10px; border-radius: 200px;\">\n              <div style=\"margin-top: 50px;\">\n                <input type='file' [(ngModel)]=\"user.imagePath\" name='image' accept=\".jpg, .jpeg, .png\"/>\n                <input type='submit' (click)=\"editUser()\" value='Save'/>\n              </div>\n            </form>\n          </div>\n  \n          <div class=\"col-lg-5\">\n            <h1 class=\"my-4\">Datos Usuario</h1>\n            <div>\n              <ul>\n                <li>\n                  Nombre de usuario: <span class=\"nombre_usuario\" id=\"name\">{{user.info}}</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div class=\"col-lg-3\">\n            <h1 class=\"my-4\">Settings</h1>\n            <div id=\"myDropdown\" class=\"dropdown-content\">\n              <form action=\"/profile/changeName\" method=\"post\">\n                <input type=\"text\" placeholder=\"Cambiar Nombre..\" [(ngModel)]=\"user.info\" name=\"name\">\n                <input type=\"submit\" (click)=\"editUser()\" value=\"Save\">\n              </form>\n            </div>\n            <p></p>\n            <div id=\"myDropdown\" class=\"dropdown-content\">\n                <form action=\"/profile/changePass\" method=\"post\">\n                  <input type=\"text\" placeholder=\"Cambiar Contraseña..\" [(ngModel)]=\"user.password\" name=\"password\">\n                  <input type=\"submit\" (click)=\"editUser()\" value=\"Save\">\n                </form>\n            </div>\n            <p></p>\n            <div style=\"margin: 20px\">\n              <form action=\"\">\n                <input class=\"btn btn-info\" type=\"submit\" value=\"Suscripciones\" style=\"margin-left: 105px;\" (click)=\"gotoSubscriptions()\">\n              </form>\n            </div>\n            <div style=\"margin: 20px\">\n              <form action=\"/logout\" method=\"post\">\n                <input class=\"btn btn-danger\" type=\"submit\" value=\"Cerrar Sesion\" style=\"margin-left: 105px;\" (click)=\"logOut()\">\n              </form>\n            </div>\n          </div>\n  \n      </div>\n      <!-- /.row -->\n  \n    </div>\n    <!-- /.container -->\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Game } from 'src/app/models/game.model';\nimport { GameService } from 'src/app/services/game.service';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n\tselector: 'app-subs-button',\n\ttemplateUrl: './subs-button.component.html'\n})\nexport class SubsButtonComponent {\n\tgame: Game;\n\n\t@Input()\n\tgameId: number;\n\n\tconstructor(private router: Router, public gameService: GameService, public loginService: LoginService) {\n\t\tthis.gameService.getGameById(this.gameId).subscribe(\n\t\t\tgame => {\n\t\t\t\tthis.game = game as Game;\n\t\t\t}\n\t\t)\n\t}\n\n\tunSubscribe(id: number) {\n\n\t\tthis.gameService.unSubscribeToGame(this.game.id).subscribe(\n\t\t\tsubscriptions => {\n\t\t\t\tthis.loginService.user.myGames = subscriptions as number[];\n\t\t\t}\n\t\t)\n\n\t\tthis.gotoSuccessPage();\n\t}\n\n\tgotoSuccessPage() { this.router.navigate(['successPage']); }\n\tgotoGamePage(id: number) { this.router.navigate(['games/' + id]); }\n}\n","\n  <tr>\n    <td><img src=\"{{game.imagePath}}\" width=\"170\" height=\"230\" style=\"margin-left: 20px;\"\n        (click)=\"gotoGamePage(game.id)\"></td>\n    <td>{{game.gameTitle}}</td>\n    <td>{{game.description}}</td>\n    <td>{{game.genre}}</td>\n    <td>\n      <div class=\"btn-group-vertical\">\n        <input type=\"submit\" class=\"btn btn-danger\" value=\"Eliminar\" (click)=\"unSubscribe(game.id)\">\n      </div>\n    </td>\n  </tr>","import { GameListComponent } from './adminUpdates/gameList.component';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HeaderComponent } from './header/header.component';\nimport { GamePageComponent } from './game-page/game-page.component';\nimport { routing } from './app.routing';\nimport { IndexPageComponent } from './index-page/index-page.component';\nimport { GameStatisticsComponent } from './game-statistics/game-statistics.component';\nimport { ListPostsComponent } from './posts/listPosts.component';\nimport { PostButtonComponent } from './posts/postButton.component';\nimport { ExpandedPostComponent } from './posts/expandedPost.component';\nimport { CreatePostComponent } from './posts/createPost.component';\nimport { EditPostComponent } from './posts/editPost.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AdminUpdatesComponent } from './adminUpdates/adminUpdates.component';\nimport { DatePipe } from '@angular/common';\nimport { SuccessPageComponent } from './success-page/success-page.component';\nimport { SubscriptionsComponent } from './subscriptions/subscriptions.component';\nimport { SubsButtonComponent } from './subscriptions/subs-button/subs-button.component';\n\n\n@NgModule({\n  declarations: [AppComponent,HeaderComponent,FooterComponent, GamePageComponent, IndexPageComponent,\n    GameStatisticsComponent, CreatePostComponent ,ListPostsComponent,  ExpandedPostComponent,\n    PostButtonComponent, EditPostComponent, LoginComponent, RegisterComponent, \n    ProfileComponent,AdminUpdatesComponent, SuccessPageComponent,GameListComponent, SubscriptionsComponent, SubsButtonComponent],\n  imports: [BrowserModule, FormsModule, HttpClientModule, routing],\n  providers: [DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { GameListComponent } from './adminUpdates/gameList.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GamePageComponent } from './game-page/game-page.component';\nimport { GameStatisticsComponent } from './game-statistics/game-statistics.component';\nimport { IndexPageComponent } from './index-page/index-page.component';\nimport { ListPostsComponent } from './posts/listPosts.component';\nimport { PostButtonComponent } from './posts/postButton.component';\nimport { ExpandedPostComponent } from './posts/expandedPost.component';\nimport { CreatePostComponent } from './posts/createPost.component';\nimport { EditPostComponent } from './posts/editPost.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AdminUpdatesComponent } from './adminUpdates/adminUpdates.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SubscriptionsComponent } from './subscriptions/subscriptions.component';\nimport { EditGameComponent } from './adminUpdates/editGame/editGame.component';\nimport { NewGameComponent } from './adminUpdates/newGame/newGame.component';\nimport { SuccessPageComponent } from './success-page/success-page.component';\nimport { SubsButtonComponent } from './subscriptions/subs-button/subs-button.component';\n\nconst appRoutes = [\n\n    { path: 'games/:id', component: GamePageComponent },\n    { path: 'gameList',component: GameListComponent},\n    { path: 'index', component: IndexPageComponent },\n    { path: 'adminUpdates', component: AdminUpdatesComponent },\n    { path: 'editGame/:id', component: EditGameComponent},\n    { path: 'newGame', component: NewGameComponent},\n    { path: 'statistics/:id', component: GameStatisticsComponent },\n    { path: '', redirectTo: 'index', pathMatch: 'full' },\n    { path: 'listPosts/types',component:ListPostsComponent},\n    { path: 'listPosts/:id',component:ExpandedPostComponent},\n    { path: 'newPost/:id',component:CreatePostComponent},\n    { path: 'editPost/:id',component:EditPostComponent},\n    { path: 'login',component:LoginComponent},\n    { path: 'register',component:RegisterComponent},\n    { path: 'profile/:id',component:ProfileComponent},\n    { path: 'successPage',component:SuccessPageComponent},\n    { path: 'subscriptions',component:SubscriptionsComponent}\n];\n\nexport const routing = RouterModule.forRoot(appRoutes);\n","<div class=\"container container-white\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-md-8 col-sm-8 \">\n        <h1 class=\"my-4\">Juegos</h1>\n        <div class=\"row\" id=\"gamesZone\">\n          <div class=\"col-lg-3 col-md-4 col-sm-6\" *ngFor=\"let game of games\">\n            <div class=\"card h-100\">\n              <a (click)=\"gotoGamePage(game.id)\"><img class=\"card-img-top\" src=\"{{game.imagePath}}\"  alt=\"\"></a>\n              <div class=\"card-body\">\n                <h6 class=\"card-title links\">\n                  <a (click)=\"gotoGamePage(game.id)\" class=\"links\">{{game.gameTitle}}</a>\n                </h6>\n                <!--<p class=\"card-text\">descipcion corta que ya veremos como la ponemos si la ponemos</p>-->\n              </div>\n              <div class=\"card-footer\">\n                <small class=\"text-muted\">{{game.averageScore}} ★</small>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div id=\"loadZone\"></div>\n        <div class=\"row\">\n          <div class=\"col-lg-12 col-md-12 mb-12\" style=\"align-items: center; width:100%\">\n            <div class=\"card-body\">\n              <div class=\"card h-100\">\n                  <button class=\"btn btn-info\" (click)=\"getMoreGames()\">Mostrar Más</button>\n              </div>\n\n            </div>\n          </div>\n        </div>\n        <!-- /.row -->\n      </div>\n      <!-- /.col-lg-9 -->\n      <div class=\"col-lg-3 col-md-4 col-sm-4\">\n        <h1 class=\"my-4\">Categorias</h1>\n        <div class=\"container\" style=\"margin: 10px;\">\n\n          <input type=\"checkbox\" name=\"Horror\" [(ngModel)]=\"filters[0]\" > Horror<br>\n          <input type=\"checkbox\" name=\"Shooter\" [(ngModel)]=\"filters[1]\"> Shooter<br>\n          <input type=\"checkbox\" name=\"Action\" [(ngModel)]=\"filters[2]\"> Action<br>\n          <input type=\"checkbox\" name=\"Plataformer\" [(ngModel)]=\"filters[3]\"> Plataformer<br>\n          <input type=\"checkbox\" name=\"Sports\" [(ngModel)]=\"filters[4]\"> Sports<br>\n          <input type=\"checkbox\" name=\"Puzzles\" [(ngModel)]=\"filters[5]\"> Puzzles<br>\n          <input type=\"checkbox\" name=\"Narrative\" [(ngModel)]=\"filters[6]\"> Narrative<br>\n          <input type=\"checkbox\" name=\"RPG\" [(ngModel)]=\"filters[7]\"> RPG<br>\n          <button (click)=\"searchWithFilters()\">Busqueda con filtros</button>\n        </div>\n      </div>\n      <!-- /.col-lg-3 -->\n    </div>\n    <!-- /.row -->\n  </div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Game } from '../models/game.model';\nimport { GameService } from '../services/game.service';\n\n@Component({\n  selector: 'gameList',\n  templateUrl: './gameList.component.html'\n})\nexport class GameListComponent{\n  games:Game[];\n  filters:boolean[]=[false,false,false,false,false,false,false,false];\n  filtersString:string[]=[\"Horror\",\"Shooter\",\"Action\",\"Platformer\",\"Sports\",\"Puzzles\",\"Narrative\",\"RPG\"]\n  constructor(private router: Router, private gameService: GameService){}\n  numPage=0;\n  ngOnInit() {\n    this.getGames(0);\n  }\n  getGames(num:number){\n    this.gameService.getGamesPage(num).subscribe(\n      games => {\n        this.games = games as Game[];\n      }\n    );\n  }\n  gotoGamePage(id:number) {this.router.navigate(['games/'+id]);}\n  getMoreGames(){\n    console.log(this.numPage);\n    this.numPage+=1;\n    this.gameService.getGamesPage(this.numPage).subscribe(\n      games =>{\n        let aux =games as Game[]\n        aux.forEach(game =>{\n          this.games.push(game)\n        })\n      }\n    );\n  }\n  searchWithFilters(){\n    let finalFilters=[];\n    let auxArray=[];\n    for(var i in this.filters){\n      if(this.filters[i]==true){\n        finalFilters.push(this.filtersString[i]);\n      }\n    }\n    finalFilters.forEach(value =>{\n      this.gameService.getGamesByGenre(value).subscribe(\n        data =>{\n          let cosa =data as Game[]\n          cosa.forEach(game =>{\n            auxArray.push(game)\n          })\n        }\n      )\n    });\n    this.games=auxArray;\n\n  }\n}\n","<div class=\"container container-white\">\n    <h1 class=\"my-4\">{{game.gameTitle}}</h1>\n    <div class=\"row\">\n        <div class=\"row\" *ngIf=\"logged\">\n            <div class=\"col-lg-4\">\n                <img src=\"{{game.imagePath}}\" width=\"375\" height=\"525\" style=\"padding-left: 12px;\">\n                <div class=\"container-fluid\" id=\"usuario_comentario\">\n                    <!--comentario 1-->\n                    <h1> {{game.averageScore}} ★</h1>\n                </div>\n            </div>\n            <!-- /.col-lg-4 -->\n            <div class=\"col-lg-4\">\n\n                <div class=\"container\" style=\"margin: 10px;\">\n                    <div class=\"card h-100\">\n\n                        <div class=\"card-body\">\n                            <h4 class=\"card-title\">\n                                <p>Descripción.</p>\n                            </h4>\n                            <p class=\"card-text\">{{game.description}}</p>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-lg-4\">\n                <p></p>\n                <!-- Aqui debe ir la caja del chat-->\n                <div>\n                    <div class=\"main\">\n                        <div class=\"px-2 scroll\">\n\n                            <ng-template ngFor let-Message [ngForOf]=\"this.game.Chat.listMessages\">\n                                <ng-template [ngIf]=\"Message.isMessageWriter\">\n\n                                    <div class=\"d-flex align-items-center\">\n\n                                        <div class=\"pr-2 pl-1\"> <span\n                                                class=\"SentMessageUserName\">{{Message.nameUser}}</span>\n                                            <p class=\"msg\">{{Message.msgString}}</p>\n                                        </div>\n                                    </div>\n\n                                </ng-template>\n\n                                <ng-template [ngIf]=\"!Message.isMessageWriter\">\n                                    <div class=\"d-flex align-items-center text-right justify-content-end\">\n                                        <div class=\"pr-2 pl-1\"> <span\n                                                class=\"SentMessageUserName\">{{Message.nameUser}}</span>\n                                            <p class=\"msg\">{{Message.msgString}}</p>\n                                        </div>\n\n                                    </div>\n                                </ng-template>\n                            </ng-template>\n\n                        </div>\n                        <input type=\"text\" placeholder=\"Escriba aquí\" [(ngModel)]=\"messageSentToChat\">\n                        <button (click)=\"sendMessage()\">Enviar</button>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- else -->\n\n\n        <div class=\"row\" *ngIf=\"!logged\">\n            <div class=\"col-lg-6\">\n                <img src=\"{{game.imagePath}}\" width=\"375\" height=\"525\">\n\n                <div class=\"container-fluid\" id=\"usuario_comentario\">\n                    <!--comentario 1-->\n                    <h1> {{game.averageScore}} ★</h1>\n                </div>\n\n            </div>\n            <!-- /.col-lg-6 -->\n            <div class=\"col-lg-6\">\n                <div class=\"container\" style=\"margin: 10px;\">\n                    <div class=\"card h-100\">\n\n                        <div class=\"card-body\">\n                            <h4 class=\"card-title\">\n                                <p>Descripción.</p>\n                            </h4>\n                            <p class=\"card-text\">{{game.description}}</p>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n    <!-- /.row -->\n    <div class=\"row\">\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-dark\" style=\"margin: 10px; width:100%; \">\n\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n                aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul class=\"navbar-nav mr-auto\" style=\"align-items: center;\">\n                    <li class=\"nav-item\" style=\"padding-right: 20px;\">\n                        <a (click)=\"gotoListPosts(game.id,'Guides','1')\" class=\"btn4\" role=\"button\">Guias</a>\n                    </li>\n                    <li class=\"nav-item\" style=\"padding-right: 20px;\">\n                        <a (click)=\"gotoListPosts(game.id,'News','1')\" class=\"btn4\" role=\"button\">Noticias</a>\n                    </li>\n                    <li class=\"nav-item\" style=\"padding-right: 20px;\">\n                        <a (click)=\"gotoListPosts(game.id,'Updates','1')\" class=\"btn4\" role=\"button\">Actualizaciones</a>\n                    </li>\n                    <li class=\"nav-item\" style=\"padding-right: 20px;\">\n                        <a (click)=\"gotoGameStats(game.id)\" class=\"btn4\" role=\"button\">Estadísticas</a>\n                    </li>\n\n                    <div class=\"row\">\n                        <li class=\"nav-item\" style=\"margin-left: 20px;\">\n                            <div *ngIf=\"logged && !isSubscribe(game.id)\">\n                                <a class=\"btn btn-success\" (click)=\"subscribe(game.id)\" role=\"button\"\n                                    type='submit'>Suscribirse</a>\n                            </div>\n                            <div *ngIf=\"logged && isSubscribe(game.id)\">\n                                <a class=\"btn btn-danger\" (click)=\"unSubscribe(game.id)\" role=\"button\"\n                                    type='submit'>Desuscribirse</a>\n                            </div>\n                        </li>\n                        <li class=\"nav-item\" *ngIf=\"logged\" style=\"margin-left: 10px;\">\n\n\n                            <div style=\"direction: rtl; unicode-bidi: bidi-override;\" method=\"post\">\n\n                                <input id=\"radio1\" type=\"submit\" style=\"display: none;\" name=\"stars\" value=5\n                                    (click)=\"value(5)\">\n                                <!--\n                        --><label for=\"radio1\">★</label>\n                                <!--\n                        --><input id=\"radio2\" type=\"submit\" style=\"display: none;\" name=\"stars\" value=4\n                                    (click)=\"value(4)\">\n                                <!--\n                        --><label for=\"radio2\">★</label>\n                                <!--\n                        --><input id=\"radio3\" type=\"submit\" style=\"display: none;\" name=\"stars\" value=3\n                                    (click)=\"value(3)\">\n                                <!--\n                        --><label for=\"radio3\">★</label>\n                                <!--\n                        --><input id=\"radio4\" type=\"submit\" style=\"display: none;\" name=\"stars\" value=2\n                                    (click)=\"value(2)\">\n                                <!--\n                        --><label for=\"radio4\">★</label>\n                                <!--\n                        --><input id=\"radio5\" type=\"submit\" style=\"display: none;\" name=\"stars\" value=1\n                                    (click)=\"value(1)\">\n                                <!--\n                        --><label for=\"radio5\">★</label>\n                            </div>\n\n\n                        </li>\n                    </div> <!-- {{/logged}}-->\n\n\n\n                </ul>\n\n            </div>\n        </nav>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Chat } from '../models/chat.model';\nimport { Game } from '../models/game.model';\nimport { Message } from '../models/message.model';\nimport { AlgorithmsService } from '../services/algorithms.service';\nimport { ChatService } from '../services/chat.service';\nimport { GameService } from '../services/game.service';\nimport { LoginService } from '../services/login.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-game-page',\n  templateUrl: './game-page.component.html',\n\n})\nexport class GamePageComponent {\n\ngame:Game;\nid:number;\nidChat:number;\nmyGames:number[];\nlogged:boolean;\nmessageSentToChat=\"\";\n\n\n  constructor(private router: Router, activatedRoute:ActivatedRoute,private algorithms:AlgorithmsService, private gameService: GameService, public loginService: LoginService, private userService: UserService, private chatService: ChatService) {\n    let id = activatedRoute.snapshot.params['id'];\n    this.id = id;\n  }\n  ngOnInit(): void {\n    this.getGame();\n    this.getSubscriptions();\n    this.logged=this.loginService.isLogged();\n  }\n    getGame(){\n      this.gameService.getGameById(this.id).subscribe(\n        game => {\n          this.game = game as Game;\n          this.getChat();\n        }\n      );\n    }\n    getChat(){\n      this.idChat=this.id;\n      this.idChat++;\n      this.chatService.getChatById(this.idChat).subscribe(\n        chat => {\n          this.game.Chat = chat as Chat;\n          this.setWritters(chat);\n        }\n      );\n    }\n\n    setWritters(chat: Chat){\n\n      for (let i = 0; i < (chat.listMessages as Array<Message>).length; i++) {\n        (chat.listMessages as Array<Message>)[i].isMessageWriter=(chat.listMessages as Array<Message>)[i].nameUser==(this.loginService.currentUser().info);\n      }\n    }\n\n    sendMessage(){\n\n\n      this.chatService.setNewMessage(this.id,this.messageSentToChat).subscribe(\n        game=>{\n          this.getChat();\n          this.messageSentToChat=\"\";\n        },\n        error => console.error(error)\n      )\n\n\n    }\n\n\n    value(valoration:number){\n\n      this.gameService.setScoreById(this.id,valoration).subscribe(\n        score=>{\n          this.gotoSuccessPage();\n        },\n        error => console.error(error)\n      )\n\n    }\n\n    isSubscribe(id: number){\n      return this.myGames.includes(id);\n    }\n\n    subscribe(id: number){\n\n      this.gameService.subscribeToGame(this.game.id).subscribe(\n        subscriptions=>{\n          this.loginService.user.myGames = subscriptions as number[];\n          this.algorithms.recommendedAlgorithm(this.loginService.user);\n        }\n      )\n\n      this.gotoSuccessPage();\n    }\n\n    getSubscriptions(){\n      this.userService.getSubscriptions(this.loginService.user.id).subscribe(\n        games=>{\n          this.myGames = games as number[];\n        }\n      )\n    }\n\n    unSubscribe(id: number){\n\n      this.gameService.unSubscribeToGame(this.game.id).subscribe(\n        subscriptions=>{\n          this.loginService.user.myGames = subscriptions as number[];\n        }\n      )\n\n      this.gotoSuccessPage();\n    }\n\n\n   returnIndex() {this.router.navigate(['index']);}\n   gotoSuccessPage() {this.router.navigate(['successPage']);}\n   gotoGameStats(id:number) {this.router.navigate(['statistics/'+id]);}\n   gotoListPosts(id:number,postType,numPage:string){this.router.navigate(['listPosts/types'],{queryParams:{gameID:id,theType:postType,numPage:numPage}})}\n}\n\n\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Post } from '../models/post.model';\nimport { PostService } from '../services/post.service';\n\n@Component({\n  selector: 'editPost',\n  templateUrl: './editPost.component.html'\n})\n\nexport class EditPostComponent{\n  post:Post;\n  @ViewChild(\"file\")\n  file:any;\n  constructor(private router: Router, activatedRoute:ActivatedRoute,private pService:PostService) {\n    let id = activatedRoute.snapshot.params['id'];\n    this.pService.getPostByID(id).subscribe(\n      post=>{\n        this.post=post as Post;\n      }\n    )\n   }\n   editPost(){\n    this.pService.createNewPost(this.post).subscribe((post:Post) => {\n      this.uploadPostImage(post);\n\n    },\n    error => console.error('Error al crear el post '+error)\n    );\n  }\n  uploadPostImage(post:Post){\n    const image=this.file.nativeElement.files[0];\n    if(image){\n      let formData=new FormData();\n      formData.append(\"imageFile\",image);\n      this.pService.setPostImage(post,formData).subscribe(\n        _ => this.router.navigate(['successPage'])\n      )\n    }\n  }\n}\n","<div class=\"container container-white\" style=\"padding-bottom: 420px;\">\n  <div class=\"row\">\n      <div class=\"col-lg-12\">\n          <p></p>\n          <h2>Editar {{post.title}}</h2>\n          <p></p>\n          <table class=\"table table-striped\">\n              <thead>\n                  <tr>\n                      <th>Título</th>\n                      <th>Texto</th>\n                      <th>Tipo</th>\n                      <th>Autor</th>\n                      <th class=\"responsiveC\">Imagen</th>\n                  </tr>\n              </thead>\n              <tbody>\n                  <tr>\n                      <td>\n                          <input type='text' [(ngModel)]=\"post.title\" value='{{post.title}}' name='newTitle' />\n                          <input type=\"hidden\" [(ngModel)]=\"post.id\" name=\"id\" value=\"{{post.id}}\" />\n                      </td>\n                      <td>\n                          <textarea name='newPostText' [(ngModel)]=\"post.postText\" value=\"{{post.postText}}\" rows=20 cols=40></textarea>\n                      </td>\n                      <td>\n                          <div class=\"form-input\">\n                              <div class=\"wrap\">\n                                <input list=\"postTypes\" [(ngModel)]=\"post.theType\" name=\"newType\" type=\"text\"\n                                    placeholder=\"Escoge la categoría\">\n                                <datalist id=\"postTypes\">\n                                    <option value=\"Guias\"></option>\n                                    <option value=\"Noticias\"></option>\n                                    <option value=\"Actualizaciones\"></option>\n                                </datalist>\n                            </div>\n                              </div>\n                      </td>\n                      <td>\n                          <input type='text' [(ngModel)]=\"post.author\" value='{{post.author}}' name='author' />\n                      </td>\n                      <td>\n                          <img src=\"{{post.imagePath}}\" class=\"responsive2\" width=\"240\" height=\"135\">\n                          <input #file type='file' name='imageFile' accept=\".jpg, .jpeg\"/>\n                          <input type='checkbox' name='removeImage'> <label>Eliminar imagen</label><br>\n                      </td>\n                  </tr>\n                  <button (click)=\"editPost()\">Edita el post!</button>\n              </tbody>\n          </table>\n\n\n      </div>\n      <!-- /.col-lg-12 -->\n      <!-- /.row -->\n  </div>\n  <!-- /.container -->\n</div>\n","<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n  <meta name=\"description\" content=\"\">\n  <meta name=\"author\" content=\"\">\n  <meta name=\"google-signin-client_id\"\n    content=\"774083852848-4dopf21hopfbs79gre07buuju1c89jul.apps.googleusercontent.com\">\n\n  <title>4DGames</title>\n\n  <script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n  }\n  <!-- Bootstrap core CSS -->\n  <link href=\"/assets/bootstrap/bootstrap.min.css\" rel=\"stylesheet\">\n</head>\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n  <div class=\"container\">\n    <img (click)=\"gotoIndex()\" [src]=\"imgUrl\" width=\"100\" height=\"50\">\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\"\n      aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n      <ul class=\"navbar-nav ml-auto\" style=\"align-items: center;\">\n        <li class=\"nav-item\" style=\"padding-right: 20px;\">\n          <a (click)=\"gotoGameList()\" class=\"btn4\" role=\"button\">Juegos</a>\n        </li>\n        <li class=\"nav-item\" style=\"padding-right: 20px;\" *ngIf=\"loginService.isLogged() && loginService.isAdmin()\">\n          <a (click)=\"gotoAdminUpdates()\" class=\"btn4\" role=\"button\">Editar juegos</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"!loginService.isLogged()\">\n          <button class=\"nav-link btn-danger\"\n            style=\"background-color: rgb(209, 6, 6); border-radius: 5px; margin: 2px; color: white\"\n            (click)=\"gotoLogin()\">Iniciar sesión</button>\n        </li>\n        <li class=\"nav-item \" *ngIf=\"!loginService.isLogged()\">\n          <button class=\"nav-link btn-danger\"\n            style=\"background-color: rgb(209, 6, 6); border-radius: 5px; margin: 2px; color: white\"\n            (click)=\"gotoRegister()\">Registrarse</button>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"loginService.isLogged()\">\n          <img src=\"{{loginService.user.imagePath}}\" width=\"50\" height=\"50\"\n            style=\"margin-left: 20px; border-radius: 150px;\" (click)=\"gotoProfile()\">\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user.model';\nimport { LoginService } from '../services/login.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent {\n\n  imgUrl = \"assets/logo.png\"\n\n  constructor(private router: Router,public loginService: LoginService,public userService: UserService){ }\n\n  gotoIndex() {this.router.navigate(['index']);}\n  gotoLogin() {this.router.navigate(['login']);}\n  gotoRegister() {this.router.navigate(['register']);}\n  gotoProfile() {this.router.navigate(['profile/'+this.loginService.user.id]);}\n  gotoAdminUpdates() {this.router.navigate(['adminUpdates']);}\n  gotoGameList() {this.router.navigate(['gameList']);}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'footerc',\n  templateUrl: './footer.component.html'\n})\nexport class FooterComponent {\n}\n","  <!-- Footer -->\n  <footer class=\"py-5 bg-dark\">\n    <div class=\"container\">\n      <p class=\"m-0 text-center text-white\">Copyright &copy; 4DGames 2021</p>\n    </div>\n    <!-- /.container -->\n  </footer>\n","import { Component,OnInit  } from '@angular/core';\n\n\n\n@Component({\n  selector: 'newGame',\n  templateUrl: './newGame.component.html'\n})\nexport class NewGameComponent {\n\n}","<!-- Page Content -->\n<div class=\"container container-white\" style=\"padding-bottom: 350px\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\" style=\"text-align: center; padding-top: 20px;\">\n                <p>Portada:</p>\n                <input type='file' name='imageField' accept=\".jpg, .jpeg\" />\n                <p>Titulo:</p>\n                <input type='text' name='gameTitle' />\n                <p>Descripción:</p>\n                <textarea name='description' rows=10 cols=80></textarea>\n                <p></p>\n                <div class=\"wrap\">\n                    <input list=\"colores\" name=\"genre\" type=\"text\" placeholder=\"Categoría\">\n                    <datalist id=\"colores\">\n                        <option value=\"Horror\"></option>\n                        <option value=\"Shooter\"></option>\n                        <option value=\"Action\"></option>\n                        <option value=\"Platformer\"></option>\n                        <option value=\"Sports\"></option>\n                        <option value=\"Puzzles\"></option>\n                        <option value=\"Narrative\"></option>\n                        <option value=\"RPG\"></option>\n                    </datalist>\n                </div>\n                <p></p>\n\n        </div>\n    </div>\n    <!-- /.row -->\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Post } from '../models/post.model';\n\n@Component({\n\tselector: 'postButton',\n\ttemplateUrl: './postButton.component.html'\n})\nexport class PostButtonComponent {\n\n\t@Input()\n\tpost: Post;\n\n\t@Output()\n\tprivate clicked = new EventEmitter<any>();\n\n\temitClick() {\n\t\tthis.clicked.emit();\n\t}\n}\n","<div class=\"col-lg-8 col-md-12 mb-4 btn-primary listElement\">\n  <button (click)=\"emitClick()\"><img src=\"{{post.imagePath}}\" width=\"192\" height=\"108\"></button>\n\n  <h5>{{post.title}}</h5>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-success-page',\n  templateUrl: './success-page.component.html',\n  \n})\nexport class SuccessPageComponent implements OnInit {\n\n  customMessage:String;\n\n  constructor(private router: Router, activatedRoute:ActivatedRoute) {\n    let customMessage = activatedRoute.snapshot.params['customMessage'];\n    this.customMessage = customMessage as String;\n  }\n\n  ngOnInit(): void {\n    this.customMessage = this.customMessage as String;\n  }\n\n}\n","<!-- Page Content -->\n<div class=\"container container-white\" style=\"padding-bottom: 500px\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\" style=\"text-align: center; padding-top: 20px; padding-bottom: 50px;\">\n            <p>Operación realizada con éxito</p>\n        </div>\n    </div>\n    <!-- /.row -->\n</div>\n<!-- /.container -->\n","<!-- Page Content -->\n<div class=\"container container-white\">\n  <div class=\"row\">\n    <div class=\"col-lg-12\">\n      <p></p>\n      <h2>Juegos subidos</h2>\n      <a (click)=\"gotoNewGame()\">\n        <img [src]=\"iconUrl\" width=\"40\" height=\"40\">\n      </a>\n      <p></p>\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th class=\"responsiveC\">Portada</th>\n            <th>Nombre</th>\n            <th>Descripción</th>\n            <th>Categoria</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody id=\"gamesZone\">\n          <tr *ngFor=\"let game of games\">\n              <td><a href=\"\"><img src=\"{{game.imagePath}}\" width=\"170\" height=\"230\"></a></td>\n              <td>{{game.gameTitle}}</td>\n              <td>{{game.description}}</td>\n              <td>{{game.genre}}</td>\n              <td>\n                <div class=\"btn-group-vertical\">\n                  <a class=\"btn btn-info\" (click)=\"gotoEditGame(game.id)\" role=\"button\">Editar</a>\n                  <a class=\"btn btn-info\" (click)=\"gotoCreatePost(game.id)\" role=\"button\">Crear post</a>\n                  <a class=\"btn btn-danger\" href=\"/adminUpdates/delete/\" role=\"button\">Eliminar</a>\n                </div>\n              </td>\n          </tr>\n\n          <!--\n          <tr>\n            <td>No se ha encontrado el juego</td>\n            <td>No se ha encontrado el juego</td>\n            <td>No se ha encontrado el juego</td>\n            <td>No se ha encontrado el juego</td>\n          </tr>\n          -->\n        </tbody>\n      </table>\n      <div id=\"loadZone\" class=\"table table-striped\"></div>\n    </div>\n    <!-- /.col-lg-12 -->\n    <div class=\"col-lg-12 col-md-12 mb-12\" style=\"align-items: center;\">\n      <div class=\"card-body\">\n        <div class=\"card h-100\">\n          <button class=\"btn btn-info\" id=\"loadMore\">Mostrar Más</button>\n        </div>\n      </div>\n    </div>\n    <!-- /.row -->\n  </div>\n  <!-- /.container -->\n</div>\n","import { Component,OnInit  } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Game } from '../models/game.model';\nimport { GameService } from '../services/game.service';\n\n\n@Component({\n  selector: 'adminUpdates',\n  templateUrl: './adminUpdates.component.html'\n})\nexport class AdminUpdatesComponent {\n  games: Game[];\n  constructor(private router: Router, activatedRoute:ActivatedRoute, private gameService: GameService){}\n  iconUrl = \"assets/plusicon.png\"\n\n  ngOnInit() {\n    this.getGames();\n  }\n  getGames(){\n    this.gameService.getGames().subscribe(\n      games => {\n        this.games = games as Game[];\n      }\n    );\n  }\n  gotoEditGame(id:number) {this.router.navigate(['editGame/'+id]);}\n  gotoCreatePost(id:number) {this.router.navigate(['newPost/'+id]);}\n  gotoNewGame() {this.router.navigate(['newGame']);}\n}\n","import { User } from '../models/user.model';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nconst BASE_URL: string = 'api/profiles/';\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n  constructor(private httpClient: HttpClient) { }\n  getUserById(id: number): Observable<User> {\n    return this.httpClient.get(BASE_URL + id).pipe(\n      catchError(error => this.handleError(error))\n    ) as Observable<User>;\n  }\n\n  getUsers(): Observable<User[]> {\n    return this.httpClient.get(BASE_URL).pipe(\n      catchError(error => this.handleError(error))\n    ) as Observable<User[]>;\n  }\n\n  createNewUser(user: User) {\n    return this.httpClient.post(BASE_URL,user).pipe(\n      catchError(error => this.handleError(error))\n    ) as Observable<number[]>;\n  }\n\n  getSubscriptions(id:number): Observable<number[]> {\n    return this.httpClient.get(BASE_URL + id + '/subscriptions').pipe(\n      catchError(error => this.handleError(error))\n    ) as Observable<number[]>;\n  }\n\n  \n\n\n  private handleError(error: any) {\n    console.error(error);\n    return Observable.throw('Server error (' + error.status + '): ' + error.text())\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders,HttpParams  } from '@angular/common/http';\nimport { Game } from '../models/game.model';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Chat } from '../models/chat.model';\n\nconst BASE_URL: string = 'api/chats/';\n@Injectable({providedIn: 'root' })\n  export class ChatService {\n    constructor(private httpClient: HttpClient) { }\n    getChatById(id: number): Observable<Chat>{\n        return this.httpClient.get(BASE_URL + id).pipe(\n          catchError(error => this.handleError(error))\n        ) as Observable<Chat>;\n    }\n\n    setNewMessage(id: number,messageSentToChat:String) {\n        const params=new HttpParams().set('message',messageSentToChat.toString())\n        return this.httpClient.put(BASE_URL + id, params).pipe(\t\t\t\n          catchError(error => this.handleError(error))\n        ) as Observable<Chat>;\n      }\n\n    private handleError(error: any) {\n\t\tconsole.error(error);\n\t\treturn Observable.throw('Server error (' + error.status + '): ' + error.text())\n\t}\n  }","<!-- Page Content -->\n<div class=\"container container-white\">\n    <div class=\"row\">\n        <div class=\"col-lg-9 col col-md-8 col-sm-8 \">\n            <a (click)=\"gotoGamePage(26)\">\n                <h1 class=\"game_tittle links\">Hollow Knight</h1>\n                <img class=\"d-block img-fluid\"  src=\"assets/hollow-knight.jpg\" alt=\"First slide\" width=\"900\" height=\"350\">\n            </a>\n            <div class=\"row\"\n                style=\"background-color: rgb(209, 6, 6); color: white; border-radius: 5px; padding: 5px; margin: auto;\">\n                Posts Varios\n            </div>\n            <div class=\"row\">\n                <div *ngFor=\"let game of games;\" class=\"col-lg-3 col-md-4 mb-4\">\n                    <div class=\"card h-100\">\n                        <a (click)=\"gotoGamePage(game.id)\"><img class=\"card-img-top\" src=\"{{game.imagePath}}\" alt=\"\"></a>\n                        <div class=\"card-body\">\n                            <h6 class=\"card-title\">\n                                <a href=\"/gamePage/\" class=\"links\">{{game.gameTitle}}</a>\n                            </h6>\n                            <!--<p class=\"card-text\">descripcion del juego</p>-->\n                        </div>\n                        <div class=\"card-footer\">\n                            <small class=\"text-muted\">{{game.averageScore}} ★</small>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- /row -->\n        </div>\n        <!-- /.col-lg-9 -->\n        <div class=\"col-lg-3 col-md-4 col-sm-4\">\n            <h2 class=\"my-4\">whatlist</h2>\n            <div class=\"container\" style=\"margin-right: 20px; margin-bottom: 20px;\">\n                <!--\n        {{#selectedList}}\n        <div class=\"card h-100\">\n          <a href=\"/gamePage/{{id}}\"><img class=\"card-img-top\" src=\"/gamePage/{{id}}/image\" alt=\"\"></a>\n          <div class=\"card-body\">\n            <h4 class=\"card-title\">\n              <a href=\"#\" class=\"links\"></a>\n            </h4>\n            <p class=\"card-text\">{{gameTitle}}</p>\n          </div>\n          <div class=\"card-footer\">\n            <small class=\"text-muted\">{{averageScore}} ★</small>\n          </div>\n        </div>\n        {{/selectedList}}-->\n\n            </div>\n        </div>\n        <!-- /.col-lg-3 -->\n    </div>\n    <!-- /.row -->\n</div>\n<!-- /.container -->\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Game } from '../models/game.model';\nimport { GameService } from '../services/game.service';\n\n@Component({\n  selector: 'app-index-page',\n  templateUrl: './index-page.component.html',\n  \n})\nexport class IndexPageComponent  {\n\n  game:Game;\n  games:Game[];\n  iconUrl = \"assets/plusicon.png\"\n\n  constructor(private router: Router, activatedRoute:ActivatedRoute, private gameService: GameService) {\n    let id = activatedRoute.snapshot.params['id'];\n\n  \n  }\n  ngOnInit() {\n    this.getGames();\n  }\n  getGames(){\n    this.gameService.getGames().subscribe(\n      games => {\n        this.games = games as Game[];\n        const items = this.games.slice(0, 8);\n        this.games=items;\n      }\n    );\n  }\n  gotoGamePage(id:number) {this.router.navigate(['games/'+id]);}\n  gotoAdminUpdates() {this.router.navigate(['adminUpdates']);}\n}\n","<div class=\"container\" style=\"padding-bottom: 305px;\">\n    <div class=\"row\">\n        <div class=\"col-lg-3\">\n\n        </div>\n        <div class=\"col-lg-6\">\n            <div class=\"main-section\">\n                <div class=\"content-section\">\n                    <div class=\"head-section\">\n                        <h3>Iniciar sesión</h3>\n                    </div>\n                    <div class=\"body-section\">\n                        <form *ngIf=\"!loginService.isLogged()\" method=\"POST\" enctype=\"multipart/form-data\">\n                            <div class=\"form-input\">\n                                <input #user type=\"text\" class=\"form-control\" name=\"username\" placeholder=\"Username\">\n                            </div>\n                            <div class=\"form-input\">\n                                <input #pass type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\">\n                            </div>\n                            <div class=\"container\">\n                                <div class=\"row\">\n                                    <div class=\"form-input col-md-8\">\n                                        <input type=\"submit\" value=\"IniciarSesion\"\n                                            (click)=\"logIn($event, user.value, pass.value)\">\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-3\">\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../services/login.service';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n\n  constructor(public loginService: LoginService,private router: Router) { }\n\n  logIn(event: any, user: string, pass: string) {\n\n    event.preventDefault();\n\n    this.loginService.logIn(user, pass);\n\n    this.router.navigate(['index']);\n  }\n\n}\n","<div class=\"container container-white\">\n  <div class=\"row\">\n      <!-- Post Content Column -->\n      <div class=\"col-lg-8\">\n        <!-- Title -->\n        <h1 class=\"mt-4\" id=\"mainTitle\">{{post.title}}</h1>\n\n        <!-- Author -->\n        <p class=\"lead\" id=\"mainAuthor\">\n          by {{post.author}}\n        </p>\n        <div *ngIf=\"logged\">\n          <button (click)=\"gotoEditPost()\">Editar post</button>\n          <button (click)=\"deleteThis()\" style=\"background-color: red;\">Borrar post</button>\n        </div>\n\n        <hr>\n\n        <!-- Date/Time -->\n        <p id=\"date1\"><strong>Fecha de creacion:{{post.creationDate}}</strong></p>\n        <p id=\"date2\"><strong>Fecha de la última actualización:{{post.updateDate}}</strong></p>\n\n        <hr>\n        <img class=\"img-fluid rounded\" src=\"{{post.imagePath}}\" alt=\"\">\n\n\n        <hr>\n\n        <!-- Post Content -->\n        <p class=\"lead mainText\" id=\"mainText\">{{post.postText}}</p>\n        <hr>\n\n    </div>\n    <!-- Sidebar Widgets Column -->\n    <div class=\"col-lg-3 col-md-4 col-sm-4\">\n\n\n      <div class=\"container\" style=\"margin-right: 20px; margin-bottom: 20px;\">\n\n\n    </div>\n  </div>\n</div>\n\n","import { LoginService } from './../services/login.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Post } from '../models/post.model';\nimport { PostService } from '../services/post.service';\n\n@Component({\n  selector: 'post',\n  templateUrl: './expandedPost.component.html'\n})\n\nexport class ExpandedPostComponent{\n  post:Post;\n  logged:boolean;\n\n  constructor(private router: Router, activatedRoute:ActivatedRoute,private pService:PostService,private loginService:LoginService) {\n    let id = activatedRoute.snapshot.params['id'];\n    this.pService.getPostByID(id).subscribe(\n      post=>{\n        this.post=post as Post;\n      }\n    )\n    this.logged=this.loginService.isAdmin();\n   }\n   gotoEditPost(){\n    this.router.navigate(['editPost/'+this.post.id])\n  }\n  gotoNewPost(){\n    this.router.navigate(['newPost/'+this.post.id])\n  }\n  deleteThis(){\n    this.pService.deletePostbyID(this.post.id).subscribe(\n      data =>{this.router.navigate(['successPage']);}\n    )\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}